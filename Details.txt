# Variable Declaration
VAR num = 10
VAR num1 = 5

# Mathematical Operations
ADD num num1  # Add num and num1
SUB num num1  # Subtract num1 from num
MULTIPLY num num1  # Multiply num and num1
DIVIDE num num1  # Divide num by num1
SQUARE num  # Square num
----------------------------------------------------------------------------------

1) Lexer: The lexer will tokenize the input code.
2) Parser: The parser will parse the tokens and create an abstract syntax tree (AST).
3) Interpreter: The interpreter will traverse the AST and execute the operations. 


Documentation:
MyLang is a simple programming language designed to perform basic mathematical operations, variable manipulation, printing, input/output, conditional branching, and loops. It includes the following keywords and features:

Keywords:
VAR: Declares a variable.
ADD: Performs addition.    
SUB: Performs subtraction.  
MULTIPLY: Performs multiplication.  
DIVIDE: Performs division.
SQUARE: Calculates the square of a number.
WRITE: Outputs a value.
READ: Takes user input.
Bitwise Operator: AND OR NOT XOR
Factrization
Prime Numbers


Operations:
Mathematical operations: addition, subtraction, multiplication, division, square.
Variable declaration and manipulation.
Input and output operations.
Bitwise , Factrization, Prime print
----------------------------------------------------------------------------------
VAR num = 10
VAR num1 = 50
ADD num num1    # 10 + 50 = 60
WRITE num1      # 60
SUB num1 num    # 60 - 10 = 50
WRITE num       # 50
WRITE num1      # 60

----------------------------------------------------------------------------------
VAR num = 10
VAR num1 = 50
VAR num2 = 5
ADD num num1
WRITE num1

AND num num1
WRITE num1
OR num num1
XOR num num1
NOT num1

FACT num2
WRITE num2

IsPRIME num

VAR num3 = 10
WRITE num3
VAR limit = 50

PPRIME 200
----------------------------------------------------------------------------------

Also Add Total lexer token in output as [('VAR', 'VAR'), ('=', '=')]= 2